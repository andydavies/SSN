/*
 * Auto-generated by Frida. Please modify to match the signature of EVP_PKEY_new_mac_key.
 * This stub is currently auto-generated from manpages when available.
 *
 * For full API reference, see: http://www.frida.re/docs/javascript-api/
 */

{
    /**
     * Called synchronously when about to call EVP_PKEY_new_mac_key.
     *
     * @this {object} - Object allowing you to store state for use in onLeave.
     * @param {function} log - Call this function with a string to be presented to the user.
     * @param {array} args - Function arguments represented as an array of NativePointer objects.
     * For example use Memory.readUtf8String(args[0]) if the first argument is a pointer to a C string encoded as UTF-8.
     * It is also possible to modify arguments by assigning a NativePointer object to an element of this array.
     * @param {object} state - Object allowing you to keep state across function calls.
     * Only one JavaScript function will execute at a time, so do not worry about race-conditions.
     * However, do not use this to store function arguments across onEnter/onLeave, but instead
     * use "this" which is an object for keeping state local to an invocation.
     */
    onEnter(log, args, state) {
        log("EVP_PKEY_new_mac_key(" + "" + ")" + args[1]+ " "+ args[2] + " " + args[3]);
	if(args[3].toInt32() == 24){
		log("yes")
		temp = Memory.readByteArray(args[2],48);
		arr = new Uint8Array(temp);
		log (arr[0] +" "+arr[1] +" "+arr[2] +" "+arr[3] +" "+arr[4] +" "+arr[5] +" "+arr[6] +" " + arr[7] +" "+arr[8] +" "+arr[9]+" "+arr[10] +" "+arr[11] +" "+arr[12]+" "+arr[13] +" "+arr[14] +" "+arr[15] +" "+arr[16] +" "+arr[17] +" "+arr[18] +" " + arr[19] +" "+arr[20] +" "+arr[21]+" "+arr[22] +" "+arr[23] +" "+arr[24]+" "+arr[25] +" "+arr[26] +" "+arr[27] +" "+arr[28] +" "+arr[29] +" "+arr[30] +" " + arr[31] +" "+arr[32] +" "+arr[33]+" "+arr[34] +" "+arr[35] +" "+arr[36] +" "+arr[37] +" "+arr[38] +" "+arr[39] +" "+arr[40] +" "+arr[41] +" "+arr[42] +" " + arr[43] +" "+arr[44] +" "+arr[45]+" "+arr[46] +" "+arr[47]+arr[16] +" "+arr[17] +" "+arr[18] +" " + arr[19] +" "+arr[20] +" "+arr[21]+" "+arr[22] +" "+arr[23] +" "+arr[24]+" "+arr[25] +" "+arr[26] +" "+arr[27] +" "+arr[28] +" "+arr[29] +" "+arr[30] +" " + arr[31] +" "+arr[32] +" "+arr[33]+" "+arr[34] +" "+arr[35] +" "+arr[36] +" "+arr[37] +" "+arr[38] +" "+arr[39] +" "+arr[40] +" "+arr[41] +" "+arr[42] +" " + arr[43] +" "+arr[44] +" "+arr[45]+" "+arr[46] +" "+arr[47])
	}
	





    },

    /**
     * Called synchronously when about to return from EVP_PKEY_new_mac_key.
     *
     * See onEnter for details.
     *
     * @this {object} - Object allowing you to access state stored in onEnter.
     * @param {function} log - Call this function with a string to be presented to the user.
     * @param {NativePointer} retval - Return value represented as a NativePointer object.
     * @param {object} state - Object allowing you to keep state across function calls.
     */
    onLeave(log, retval, state) {
    }
}
